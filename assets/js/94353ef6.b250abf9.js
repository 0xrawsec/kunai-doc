"use strict";(self.webpackChunkkunai_doc=self.webpackChunkkunai_doc||[]).push([[2470],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=d(n),m=o,f=c["".concat(s,".").concat(m)]||c[m]||p[m]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var d=2;d<a;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1778:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:20},i="Init module",l={unversionedId:"events/init_module",id:"events/init_module",title:"Init module",description:"This kind of event is generated when a kernel module is loaded into the kernel.",source:"@site/docs/events/init_module.md",sourceDirName:"events",slug:"/events/init_module",permalink:"/docs/next/events/init_module",draft:!1,tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"Prctl",permalink:"/docs/next/events/prctl"},next:{title:"Bpf prog load",permalink:"/docs/next/events/bpf_prog_load"}},s={},d=[],u={toc:d},c="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"init-module"},"Init module"),(0,o.kt)("p",null,"This kind of event is generated when a kernel module is loaded into the kernel."),(0,o.kt)("admonition",{title:"module metadata",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Due to the nature of ",(0,o.kt)("a",{parentName:"p",href:"https://man7.org/linux/man-pages/man2/init_module.2.html"},(0,o.kt)("inlineCode",{parentName:"a"},"init_module"))," syscall, it is fairly complicated to find a reliable way to get access to kernel module data (in pure eBPF)\xa0and extract hashing information from it."),(0,o.kt)("p",{parentName:"admonition"},"Until we find a solution to that issue, we propose to detect suspicious modules loaded based on the loading context (ancestors, loader ...) rather than on the data of the module being loaded.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "ancestors": "/usr/lib/systemd/systemd|/usr/bin/bash|/usr/bin/urxvt|/usr/bin/zsh|/usr/bin/sudo|/usr/bin/sudo",\n    "command_line": "modprobe nbd max_part=16",\n    "exe": "/usr/bin/kmod",\n    "module_name": "nbd",\n    "args": "max_part=16",\n    "userspace_addr": "0x7f0691268010",\n    "loaded": true\n  },\n  "info": {\n    ...\n    "event": {\n        ...\n        "id": 20,\n        "name": "init_module",\n        ...\n    },\n    ...\n  }\n}\n')))}p.isMDXComponent=!0}}]);